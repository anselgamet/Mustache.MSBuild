# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

container: mcr.microsoft.com/dotnet/core/sdk:2.1.700

variables:
  PackageFolder: '$(Build.ArtifactStagingDirectory)/target'
  AssemblyOriginatorKeyFile: '$(AssemblyOriginatorKeyFile.secureFilePath)'
  PublicRelease: '$[ eq(variables['Build.SourceBranch'], 'refs/heads/master') ]'
  CreateHardLinksForCopyLocalIfPossible: '$(PublicRelease)'

steps:
- task: DownloadSecureFile@1
  displayName: 'Download Strong Name Public Key'
  inputs:
    secureFile: '$(SecureFileId)'
  condition: 'and(succeeded(), $(PublicRelease))'

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: dirs.proj
    feedsToUse: config
    nugetConfigPath: NuGet.config

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    projects: dirs.proj
    arguments: '--configuration Release --no-restore -warnaserror'

- task: PowerShell@2
  displayName: 'Process Build Outputs'
  inputs:
    targetType: filePath
    filePath: './.azure-pipelines/VsoAdapter.ps1'
    arguments: '-BuildOutputsEncoded "$(build.outputs)" -SourceDir "$(build.sourcesdirectory)"'
  condition: 'and(succeeded(), $(PublicRelease))'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: dirs.proj

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning dlls'
  inputs:
    ConnectedServiceName: '$(EsrpEndpointName)'
    FolderPath: '$(build.sourcesdirectory)'
    Pattern: '$(build.taskinput.sign)'
    UseMinimatch: true
    signConfigType: inlineSignParams
    inlineOperation: |
     [{
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
     {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "FileDigest",
                 "parameterValue": "/fd \"SHA256\""
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
  condition: 'and(succeeded(), $(PublicRelease))'

- task: PowerShell@2
  displayName: 'Fix Broken HardLinks'
  inputs:
    targetType: filePath
    filePath: './.azure-pipelines/VsoAdapter.ps1'
    arguments: '-HardlinksEncoded "$(build.taskinput.brokenhardlinks)" -SourceDir "$(build.sourcesdirectory)"'
  condition: 'and(succeeded(), $(PublicRelease))'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    packagesToPack: dirs.proj
    packDirectory: '$(PackageFolder)'
    nobuild: true
    verbosityPack: Minimal
  condition: 'and(succeeded(), $(PublicRelease))'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning Packages'
  inputs:
    ConnectedServiceName: '$(EsrpEndpointName)'
    FolderPath: '$(PackageFolder)'
    Pattern: '*.nupkg'
    signConfigType: inlineSignParams
    inlineOperation: |
     [{
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }]
  condition: 'and(succeeded(), $(PublicRelease))'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Packages'
  inputs:
    PathtoPublish: '$(PackageFolder)'
    ArtifactName: packages
  condition: 'and(succeeded(), $(PublicRelease))'
